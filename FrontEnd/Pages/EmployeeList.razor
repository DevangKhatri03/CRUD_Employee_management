@page "/employees"
@using CRUD_Employee_management.Models
@using FrontEnd.Services

@inject EmployeeService EmployeeService
@inject NavigationManager Navigation

<h3>Employee List</h3>

<!-- Add Employee Button -->
<button class="btn btn-success" @onclick="NavigateToAddEmployee">Add Employee</button>

@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else if (!employees.Any())
{
    <p>No employees found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Department</th>
                <th>Position</th>
                <th>Date Hired</th>
                <th>Salary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
                <tr>
                    <td>@employee.Id</td>
                    <td>@employee.FirstName</td>
                    <td>@employee.LastName</td>
                    <td>@employee.Email</td>
                    <td>@employee.Phone</td>
                    <td>@employee.Department</td>
                    <td>@employee.Position</td>
                    <td>@employee.DateHired.ToShortDateString()</td>
                    <td>@employee.Salary</td>
                    <td>
                        <!-- Use NavLink with the correct href syntax -->
                        <NavLink class="btn btn-primary" href="@($"/edit-employee/{employee.Id}")">Edit</NavLink>

                        <button class="btn btn-danger" @onclick="() => DeleteEmployee(employee.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Employee> employees;

    protected override async Task OnInitializedAsync()
    {
        employees = await EmployeeService.GetAllEmployees();
    }

    private async Task DeleteEmployee(int id)
    {
        await EmployeeService.DeleteEmployee(id);
        employees = await EmployeeService.GetAllEmployees(); // Refresh the employee list after deletion
    }

    private void NavigateToAddEmployee()
    {
        Navigation.NavigateTo("/createemployee"); // Redirect to the Add Employee page
    }
}
