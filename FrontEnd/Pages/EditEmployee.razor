@page "/edit-employee/{id:int}"  
@using CRUD_Employee_management.Models
@using FrontEnd.Services
@inject EmployeeService EmployeeService
@inject NavigationManager Navigation

<h3>Edit Employee</h3>

<EditForm Model="employee" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstName">First Name</label>
        <InputText id="firstName" class="form-control" @bind-Value="employee.FirstName" />
    </div>
    <div class="form-group">
        <label for="lastName">Last Name</label>
        <InputText id="lastName" class="form-control" @bind-Value="employee.LastName" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="employee.Email" />
    </div>
    <div class="form-group">
        <label for="phone">Phone</label>
        <InputText id="phone" class="form-control" @bind-Value="employee.Phone" />
    </div>
    <div class="form-group">
        <label for="department">Department</label>
        <InputText id="department" class="form-control" @bind-Value="employee.Department" />
    </div>
    <div class="form-group">
        <label for="position">Position</label>
        <InputText id="position" class="form-control" @bind-Value="employee.Position" />
    </div>
    <div class="form-group">
        <label for="salary">Salary</label>
        <InputNumber id="salary" class="form-control" @bind-Value="employee.Salary" />
    </div>
    <div class="form-group">
        <label for="dateHired">Date Hired</label>
        <InputDate id="dateHired" class="form-control" @bind-Value="employee.DateHired" />
    </div>

    <button type="submit" class="btn btn-primary">Update Employee</button>
</EditForm>

@code {
    [Parameter] public int id { get; set; }  <!-- Ensure this is an 'int' -->

    private Employee employee = new Employee();

    protected override async Task OnInitializedAsync()
    {
        // Fetch the employee by ID
        employee = await EmployeeService.GetEmployeeById(id);
    }

    private async Task HandleSubmit()
    {
        await EmployeeService.UpdateEmployee(id, employee);
        Navigation.NavigateTo("/employees"); // Redirect back to the employee list
    }
}
